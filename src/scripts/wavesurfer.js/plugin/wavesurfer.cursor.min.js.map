{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/./src/plugin/cursor/index.js","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/webpack/startup"],"names":["root","factory","exports","module","define","amd","this","CursorPlugin","params","ws","defaultParams","hideOnBlur","width","color","opacity","style","zIndex","customStyle","customShowTimeStyle","showTime","followCursorY","formatTimeCallback","_onMousemove","e","bbox","wavesurfer","container","getBoundingClientRect","y","x","clientX","left","flip","right","outerWidth","displayTime","clientY","top","height","updateCursorPosition","_onMouseenter","showCursor","_onMouseleave","hideCursor","util","cursor","Object","assign","name","deferInit","staticProps","instance","wrapper","appendChild","document","createElement","position","bottom","display","borderRightStyle","borderRightWidth","borderRightColor","pointerEvents","margin","visibility","innerHTML","formatTime","addEventListener","parentNode","removeChild","removeEventListener","xpos","ypos","duration","getDuration","elementWidth","drawer","pixelRatio","scrollWidth","getScrollX","scrollTime","timeValue","Math","max","formatValue","textOffset","cursorTime","isNaN","map","time","floor","slice","join","element","offsetWidth","getComputedStyle","parseInt","marginLeft","marginRight","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"mappings":"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","file":"wavesurfer.cursor.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"cursor\"] = factory();\n})(this, function() {\nreturn ","/**\n * @typedef {Object} CursorPluginParams\n * @property {?boolean} deferInit Set to true to stop auto init in `addPlugin()`\n * @property {boolean} hideOnBlur=true Hide the cursor when the mouse leaves the\n * waveform\n * @property {string} width='1px' The width of the cursor\n * @property {string} color='black' The color of the cursor\n * @property {string} opacity='0.25' The opacity of the cursor\n * @property {string} style='solid' The border style of the cursor\n * @property {number} zIndex=3 The z-index of the cursor element\n * @property {object} customStyle An object with custom styles which are applied\n * to the cursor element\n * @property {boolean} showTime=false Show the time on the cursor.\n * @property {object} customShowTimeStyle An object with custom styles which are\n * applied to the cursor time element.\n * @property {string} followCursorY=false Use `true` to make the time on\n * the cursor follow the x and the y-position of the mouse. Use `false` to make the\n * it only follow the x-position of the mouse.\n * @property {function} formatTimeCallback Formats the timestamp on the cursor.\n */\n\n/**\n * Displays a thin line at the position of the cursor on the waveform.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import CursorPlugin from 'wavesurfer.cursor.js';\n *\n * // commonjs\n * var CursorPlugin = require('wavesurfer.cursor.js');\n *\n * // if you are using <script> tags\n * var CursorPlugin = window.WaveSurfer.cursor;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     CursorPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class CursorPlugin {\n    /**\n     * Cursor plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {CursorPluginParams} params parameters use to initialise the\n     * plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'cursor',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {},\n            instance: CursorPlugin\n        };\n    }\n\n    /**\n     * @type {CursorPluginParams}\n     */\n    defaultParams = {\n        hideOnBlur: true,\n        width: '1px',\n        color: 'black',\n        opacity: '0.25',\n        style: 'solid',\n        zIndex: 4,\n        customStyle: {},\n        customShowTimeStyle: {},\n        showTime: false,\n        followCursorY: false,\n        formatTimeCallback: null\n    };\n\n    /**\n     * @param {object} e Mouse move event\n     */\n    _onMousemove = e => {\n        const bbox = this.wavesurfer.container.getBoundingClientRect();\n        let y = 0;\n        let x = e.clientX - bbox.left;\n        let flip = bbox.right < e.clientX + this.outerWidth(this.displayTime);\n\n        if (this.params.showTime && this.params.followCursorY) {\n            // follow y-position of the mouse\n            y = e.clientY - (bbox.top + bbox.height / 2);\n        }\n\n        this.updateCursorPosition(x, y, flip);\n    };\n\n    /**\n     * @returns {void}\n     */\n    _onMouseenter = () => this.showCursor();\n\n    /**\n     * @returns {void}\n     */\n    _onMouseleave = () => this.hideCursor();\n\n    /**\n     * Construct the plugin class. You probably want to use `CursorPlugin.create`\n     * instead.\n     *\n     * @param {CursorPluginParams} params Plugin parameters\n     * @param {object} ws Wavesurfer instance\n     */\n    constructor(params, ws) {\n        this.wavesurfer = ws;\n        this.style = ws.util.style;\n        /**\n         * The cursor HTML element\n         *\n         * @type {?HTMLElement}\n         */\n        this.cursor = null;\n        /**\n         * displays the time next to the cursor\n         *\n         * @type {?HTMLElement}\n         */\n        this.showTime = null;\n        /**\n         * The html container that will display the time\n         *\n         * @type {?HTMLElement}\n         */\n        this.displayTime = null;\n\n        this.params = Object.assign({}, this.defaultParams, params);\n    }\n\n    /**\n     * Initialise the plugin (used by the Plugin API)\n     */\n    init() {\n        this.wrapper = this.wavesurfer.container;\n        this.cursor = this.wrapper.appendChild(\n            this.style(\n                document.createElement('cursor'),\n                Object.assign(\n                    {\n                        position: 'absolute',\n                        zIndex: this.params.zIndex,\n                        left: 0,\n                        top: 0,\n                        bottom: 0,\n                        width: '0',\n                        display: 'flex',\n                        borderRightStyle: this.params.style,\n                        borderRightWidth: this.params.width,\n                        borderRightColor: this.params.color,\n                        opacity: this.params.opacity,\n                        pointerEvents: 'none'\n                    },\n                    this.params.customStyle\n                )\n            )\n        );\n        if (this.params.showTime) {\n            this.showTime = this.wrapper.appendChild(\n                this.style(\n                    document.createElement('showTitle'),\n                    Object.assign(\n                        {\n                            position: 'absolute',\n                            zIndex: this.params.zIndex,\n                            left: 0,\n                            top: 0,\n                            bottom: 0,\n                            width: 'auto',\n                            display: 'flex',\n                            opacity: this.params.opacity,\n                            pointerEvents: 'none',\n                            height: '100%'\n                        },\n                        this.params.customStyle\n                    )\n                )\n            );\n            this.displayTime = this.showTime.appendChild(\n                this.style(\n                    document.createElement('div'),\n                    Object.assign(\n                        {\n                            display: 'inline',\n                            pointerEvents: 'none',\n                            margin: 'auto',\n                            visibility: 'hidden' // initial value will be hidden just for measuring purpose\n                        },\n                        this.params.customShowTimeStyle\n                    )\n                )\n            );\n            // initial value to measure display width\n            this.displayTime.innerHTML = this.formatTime(0);\n        }\n\n        this.wrapper.addEventListener('mousemove', this._onMousemove);\n        if (this.params.hideOnBlur) {\n            // ensure elements are hidden initially\n            this.hideCursor();\n            this.wrapper.addEventListener('mouseenter', this._onMouseenter);\n            this.wrapper.addEventListener('mouseleave', this._onMouseleave);\n        }\n    }\n\n    /**\n     * Destroy the plugin (used by the Plugin API)\n     */\n    destroy() {\n        if (this.params.showTime) {\n            this.cursor.parentNode.removeChild(this.showTime);\n        }\n        this.cursor.parentNode.removeChild(this.cursor);\n        this.wrapper.removeEventListener('mousemove', this._onMousemove);\n        if (this.params.hideOnBlur) {\n            this.wrapper.removeEventListener('mouseenter', this._onMouseenter);\n            this.wrapper.removeEventListener('mouseleave', this._onMouseleave);\n        }\n    }\n\n    /**\n     * Update the cursor position\n     *\n     * @param {number} xpos The x offset of the cursor in pixels\n     * @param {number} ypos The y offset of the cursor in pixels\n     * @param {boolean} flip Flag to flip duration text from right to left\n     */\n    updateCursorPosition(xpos, ypos, flip = false) {\n        this.style(this.cursor, {\n            left: `${xpos}px`\n        });\n        if (this.params.showTime) {\n            const duration = this.wavesurfer.getDuration();\n            const elementWidth =\n                this.wavesurfer.drawer.width /\n                this.wavesurfer.params.pixelRatio;\n            const scrollWidth = this.wavesurfer.drawer.getScrollX();\n\n            const scrollTime =\n                (duration / this.wavesurfer.drawer.width) * scrollWidth;\n\n            const timeValue =\n                Math.max(0, (xpos / elementWidth) * duration) + scrollTime;\n            const formatValue = this.formatTime(timeValue);\n            if (flip) {\n                const textOffset = this.outerWidth(this.displayTime);\n                xpos -= textOffset;\n            }\n            this.style(this.showTime, {\n                left: `${xpos}px`,\n                top: `${ypos}px`\n            });\n            this.style(this.displayTime, {\n                visibility: 'visible'\n            });\n            this.displayTime.innerHTML = `${formatValue}`;\n        }\n    }\n\n    /**\n     * Show the cursor\n     */\n    showCursor() {\n        this.style(this.cursor, {\n            display: 'flex'\n        });\n        if (this.params.showTime) {\n            this.style(this.showTime, {\n                display: 'flex'\n            });\n        }\n    }\n\n    /**\n     * Hide the cursor\n     */\n    hideCursor() {\n        this.style(this.cursor, {\n            display: 'none'\n        });\n        if (this.params.showTime) {\n            this.style(this.showTime, {\n                display: 'none'\n            });\n        }\n    }\n\n    /**\n     * Format the timestamp for `cursorTime`.\n     *\n     * @param {number} cursorTime Time in seconds\n     * @returns {string} Formatted timestamp\n     */\n    formatTime(cursorTime) {\n        cursorTime = isNaN(cursorTime) ? 0 : cursorTime;\n\n        if (this.params.formatTimeCallback) {\n            return this.params.formatTimeCallback(cursorTime);\n        }\n        return [cursorTime].map(time =>\n            [\n                Math.floor((time % 3600) / 60), // minutes\n                ('00' + Math.floor(time % 60)).slice(-2), // seconds\n                ('000' + Math.floor((time % 1) * 1000)).slice(-3) // milliseconds\n            ].join(':')\n        );\n    }\n\n    /**\n     * Get outer width of given element.\n     *\n     * @param {DOM} element DOM Element\n     * @returns {number} outer width\n     */\n    outerWidth(element) {\n        if (!element) {\n            return 0;\n        }\n\n        let width = element.offsetWidth;\n        let style = getComputedStyle(element);\n\n        width += parseInt(style.marginLeft + style.marginRight);\n        return width;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(178);\n"],"sourceRoot":""}