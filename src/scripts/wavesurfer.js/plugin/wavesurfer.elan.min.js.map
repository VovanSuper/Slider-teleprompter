{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/./src/plugin/elan/index.js","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/webpack/startup"],"names":["root","factory","exports","module","define","amd","this","ElanPlugin","params","ws","Types","ALIGNABLE_ANNOTATION","REF_ANNOTATION","data","container","document","querySelector","Error","name","deferInit","instance","bindClick","url","load","removeEventListener","_onClick","removeChild","table","loadXML","xml","parseElan","render","fireEvent","callback","xhr","XMLHttpRequest","open","responseType","send","addEventListener","e","target","responseXML","_forEach","Array","prototype","forEach","_map","map","media","timeOrder","tiers","annotations","alignableAnnotations","header","inMilliseconds","getAttribute","type","timeSlots","querySelectorAll","call","slot","value","parseFloat","Math","round","tier","id","linguisticTypeRef","defaultLocale","node","annot","nodeName","ref","textContent","trim","start","end","push","reference","sort","a","b","d","length","filter","backRefs","indeces","index","Object","keys","renderedAlignable","alignable","createElement","className","thead","headRow","appendChild","th","style","width","tbody","row","td","toFixed","backRef","annotation","dataset","innerHTML","time","result","some","getElementById","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"mappings":"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","file":"wavesurfer.elan.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"elan\"] = factory();\n})(this, function() {\nreturn ","/**\n * @typedef {Object} ElanPluginParams\n * @property {string|HTMLElement} container CSS selector or HTML element where\n * the ELAN information should be rendered.\n * @property {string} url The location of ELAN XML data\n * @property {?boolean} deferInit Set to true to manually call\n * @property {?Object} tiers If set only shows the data tiers with the `TIER_ID`\n * in this map.\n */\n\n/**\n * Downloads and renders ELAN audio transcription documents alongside the\n * waveform.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import ElanPlugin from 'wavesurfer.elan.js';\n *\n * // commonjs\n * var ElanPlugin = require('wavesurfer.elan.js');\n *\n * // if you are using <script> tags\n * var ElanPlugin = window.WaveSurfer.elan;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     ElanPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class ElanPlugin {\n    /**\n     * Elan plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {ElanPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'elan',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            instance: ElanPlugin\n        };\n    }\n\n    Types = {\n        ALIGNABLE_ANNOTATION: 'ALIGNABLE_ANNOTATION',\n        REF_ANNOTATION: 'REF_ANNOTATION'\n    };\n\n    constructor(params, ws) {\n        this.data = null;\n        this.params = params;\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(params.container)\n                : params.container;\n\n        if (!this.container) {\n            throw Error('No container for ELAN');\n        }\n    }\n\n    init() {\n        this.bindClick();\n\n        if (this.params.url) {\n            this.load(this.params.url);\n        }\n    }\n\n    destroy() {\n        this.container.removeEventListener('click', this._onClick);\n        this.container.removeChild(this.table);\n    }\n\n    load(url) {\n        this.loadXML(url, xml => {\n            this.data = this.parseElan(xml);\n            this.render();\n            this.fireEvent('ready', this.data);\n        });\n    }\n\n    loadXML(url, callback) {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'document';\n        xhr.send();\n        xhr.addEventListener('load', e => {\n            callback && callback(e.target.responseXML);\n        });\n    }\n\n    parseElan(xml) {\n        const _forEach = Array.prototype.forEach;\n        const _map = Array.prototype.map;\n\n        const data = {\n            media: {},\n            timeOrder: {},\n            tiers: [],\n            annotations: {},\n            alignableAnnotations: []\n        };\n\n        const header = xml.querySelector('HEADER');\n        const inMilliseconds =\n            header.getAttribute('TIME_UNITS') == 'milliseconds';\n        const media = header.querySelector('MEDIA_DESCRIPTOR');\n        data.media.url = media.getAttribute('MEDIA_URL');\n        data.media.type = media.getAttribute('MIME_TYPE');\n\n        const timeSlots = xml.querySelectorAll('TIME_ORDER TIME_SLOT');\n        const timeOrder = {};\n        _forEach.call(timeSlots, slot => {\n            let value = parseFloat(slot.getAttribute('TIME_VALUE'));\n            // If in milliseconds, convert to seconds with rounding\n            if (inMilliseconds) {\n                value = Math.round(value * 1e2) / 1e5;\n            }\n            timeOrder[slot.getAttribute('TIME_SLOT_ID')] = value;\n        });\n\n        data.tiers = _map.call(xml.querySelectorAll('TIER'), tier => ({\n            id: tier.getAttribute('TIER_ID'),\n            linguisticTypeRef: tier.getAttribute('LINGUISTIC_TYPE_REF'),\n            defaultLocale: tier.getAttribute('DEFAULT_LOCALE'),\n            annotations: _map.call(\n                tier.querySelectorAll('REF_ANNOTATION, ALIGNABLE_ANNOTATION'),\n                node => {\n                    const annot = {\n                        type: node.nodeName,\n                        id: node.getAttribute('ANNOTATION_ID'),\n                        ref: node.getAttribute('ANNOTATION_REF'),\n                        value: node\n                            .querySelector('ANNOTATION_VALUE')\n                            .textContent.trim()\n                    };\n\n                    if (this.Types.ALIGNABLE_ANNOTATION == annot.type) {\n                        // Add start & end to alignable annotation\n                        annot.start =\n                            timeOrder[node.getAttribute('TIME_SLOT_REF1')];\n                        annot.end =\n                            timeOrder[node.getAttribute('TIME_SLOT_REF2')];\n                        // Add to the list of alignable annotations\n                        data.alignableAnnotations.push(annot);\n                    }\n\n                    // Additionally, put into the flat map of all annotations\n                    data.annotations[annot.id] = annot;\n\n                    return annot;\n                }\n            )\n        }));\n\n        // Create JavaScript references between annotations\n        data.tiers.forEach(tier => {\n            tier.annotations.forEach(annot => {\n                if (null != annot.ref) {\n                    annot.reference = data.annotations[annot.ref];\n                }\n            });\n        });\n\n        // Sort alignable annotations by start & end\n        data.alignableAnnotations.sort((a, b) => {\n            let d = a.start - b.start;\n            if (d == 0) {\n                d = b.end - a.end;\n            }\n            return d;\n        });\n\n        data.length = data.alignableAnnotations.length;\n\n        return data;\n    }\n\n    render() {\n        // apply tiers filter\n        let tiers = this.data.tiers;\n        if (this.params.tiers) {\n            tiers = tiers.filter(tier => tier.id in this.params.tiers);\n        }\n\n        // denormalize references to alignable annotations\n        const backRefs = {};\n        let indeces = {};\n        tiers.forEach((tier, index) => {\n            tier.annotations.forEach(annot => {\n                if (\n                    annot.reference &&\n                    annot.reference.type == this.Types.ALIGNABLE_ANNOTATION\n                ) {\n                    if (!(annot.reference.id in backRefs)) {\n                        backRefs[annot.ref] = {};\n                    }\n                    backRefs[annot.ref][index] = annot;\n                    indeces[index] = true;\n                }\n            });\n        });\n        indeces = Object.keys(indeces).sort();\n\n        this.renderedAlignable = this.data.alignableAnnotations.filter(\n            alignable => backRefs[alignable.id]\n        );\n\n        // table\n        const table = (this.table = document.createElement('table'));\n        table.className = 'wavesurfer-annotations';\n\n        // head\n        const thead = document.createElement('thead');\n        const headRow = document.createElement('tr');\n        thead.appendChild(headRow);\n        table.appendChild(thead);\n        const th = document.createElement('th');\n        th.textContent = 'Time';\n        th.className = 'wavesurfer-time';\n        headRow.appendChild(th);\n        indeces.forEach(index => {\n            const tier = tiers[index];\n            const th = document.createElement('th');\n            th.className = 'wavesurfer-tier-' + tier.id;\n            th.textContent = tier.id;\n            if (this.params.tiers) { th.style.width = this.params.tiers[tier.id]; }\n            headRow.appendChild(th);\n        });\n\n        // body\n        const tbody = document.createElement('tbody');\n        table.appendChild(tbody);\n        this.renderedAlignable.forEach(alignable => {\n            const row = document.createElement('tr');\n            row.id = 'wavesurfer-alignable-' + alignable.id;\n            tbody.appendChild(row);\n\n            const td = document.createElement('td');\n            td.className = 'wavesurfer-time';\n            td.textContent =\n                alignable.start.toFixed(1) + '–' + alignable.end.toFixed(1);\n            row.appendChild(td);\n\n            const backRef = backRefs[alignable.id];\n            indeces.forEach(index => {\n                const tier = tiers[index];\n                const td = document.createElement('td');\n                const annotation = backRef[index];\n                if (annotation) {\n                    td.id = 'wavesurfer-annotation-' + annotation.id;\n                    td.dataset.ref = alignable.id;\n                    td.dataset.start = alignable.start;\n                    td.dataset.end = alignable.end;\n                    td.textContent = annotation.value;\n                }\n                td.className = 'wavesurfer-tier-' + tier.id;\n                row.appendChild(td);\n            });\n        });\n\n        this.container.innerHTML = '';\n        this.container.appendChild(table);\n    }\n\n    bindClick() {\n        this._onClick = e => {\n            const ref = e.target.dataset.ref;\n            if (null != ref) {\n                const annot = this.data.annotations[ref];\n                if (annot) {\n                    this.fireEvent('select', annot.start, annot.end);\n                }\n            }\n        };\n        this.container.addEventListener('click', this._onClick);\n    }\n\n    getRenderedAnnotation(time) {\n        let result;\n        this.renderedAlignable.some(annotation => {\n            if (annotation.start <= time && annotation.end >= time) {\n                result = annotation;\n                return true;\n            }\n            return false;\n        });\n        return result;\n    }\n\n    getAnnotationNode(annotation) {\n        return document.getElementById('wavesurfer-alignable-' + annotation.id);\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(375);\n"],"sourceRoot":""}